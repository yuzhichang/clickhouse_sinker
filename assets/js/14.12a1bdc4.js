(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{203:function(s,e,t){"use strict";t.r(e);var a=t(3),n=Object(a.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"run"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#run"}},[s._v("#")]),s._v(" Run")]),s._v(" "),t("h2",{attrs:{id:"requirements"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[s._v("#")]),s._v(" Requirements")]),s._v(" "),t("p",[s._v("Note: Ensure "),t("code",[s._v("clickhouse-server")]),s._v(" and "),t("code",[s._v("kafka")]),s._v(" work before running clickhouse_sinker.")]),s._v(" "),t("h2",{attrs:{id:"configs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configs"}},[s._v("#")]),s._v(" Configs")]),s._v(" "),t("blockquote",[t("p",[s._v("There are two ways to get config: a local single config, or Nacos.")])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("For local file:")]),s._v(" "),t("p",[t("code",[s._v("clickhouse_sinker --local-cfg-file docker/test_auto_schema.json")])])]),s._v(" "),t("li",[t("p",[s._v("For Nacos:")]),s._v(" "),t("p",[t("code",[s._v("clickhouse_sinker --nacos-addr 127.0.0.1:8848 --nacos-username nacos --nacos-password nacos --nacos-dataid test_auto_schema")])])])]),s._v(" "),t("blockquote",[t("p",[s._v("Read more detail descriptions of config in "),t("RouterLink",{attrs:{to:"/configuration/config.html"}},[s._v("here")])],1)]),s._v(" "),t("h2",{attrs:{id:"example"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[s._v("#")]),s._v(" Example")]),s._v(" "),t("p",[s._v("Let's follow up a piece of the systest script.")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("Prepare")]),s._v(" "),t("ul",[t("li",[s._v("let's checkout "),t("code",[s._v("clickhouse_sinker")])])]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/housepower/clickhouse_sinker.git\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" clickhouse_sinker\n")])])]),t("ul",[t("li",[s._v("let's start standalone clickhouse-server and kafka in container:")])]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" up -d\n")])])])]),s._v(" "),t("li",[t("p",[s._v("Create a simple table in Clickhouse")]),s._v(" "),t("blockquote",[t("p",[s._v("It's not the duty for clickhouse_sinker to auto create table, so we should do that manually.")])]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IF")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXISTS")]),s._v(" test_auto_schema\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("day"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Date")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DEFAULT")]),s._v(" toDate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("time")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DateTime")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" String"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" Float64\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENGINE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" MergeTree\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PARTITION")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("day")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ORDER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("time")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("Create a topic in kafka")]),s._v(" "),t("blockquote",[t("p",[s._v("I use "),t("a",{attrs:{href:"https://github.com/birdayz/kaf",target:"_blank",rel:"noopener noreferrer"}},[s._v("kaf"),t("OutboundLink")],1),s._v(" tool to create topics.")])]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ kaf topic create topic1 -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" -r "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nâœ… Created topic"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n      Topic Name:            topic1\n      Partitions:            "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n      Replication Factor:    "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n      Cleanup Policy:        delete\n")])])])]),s._v(" "),t("li",[t("p",[s._v("Run clickhouse_sinker")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ ./clickhouse_sinker --local-cfg-file docker/test_auto_schema.json\n")])])])]),s._v(" "),t("li",[t("p",[s._v("Send messages to the topic")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{"time" : "2020-12-18T03:38:39.000Z", "name" : "name1", "value" : 1}\'')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" kaf -b "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'127.0.0.1:9092'")]),s._v(" produce topic1\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{"time" : "2020-12-18T03:38:39.000Z", "name" : "name2", "value" : 2}\'')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" kaf -b "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'127.0.0.1:9092'")]),s._v(" produce topic1\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{"time" : "2020-12-18T03:38:39.000Z", "name" : "name3", "value" : 3}\'')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" kaf -b "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'127.0.0.1:9092'")]),s._v(" produce topic1\n")])])])]),s._v(" "),t("li",[t("p",[s._v("Check the data in clickhouse")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" test_auto_schema"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("rows")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" Elapsed: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.016")]),s._v(" sec"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n")])])])])]),s._v(" "),t("h2",{attrs:{id:"run-as-a-daemon"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#run-as-a-daemon"}},[s._v("#")]),s._v(" Run as a daemon")]),s._v(" "),t("p",[s._v("On systemd managed Linux OSs such as RHEL, Debian and their variants, it's doable to run "),t("code",[s._v("clickhouse_sinker")]),s._v(" as a system service to achieve auto-restart, coredump management etc.")]),s._v(" "),t("h3",{attrs:{id:"create-etc-systemd-system-sinker-metric-service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-etc-systemd-system-sinker-metric-service"}},[s._v("#")]),s._v(" Create "),t("code",[s._v("/etc/systemd/system/sinker_metric.service")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('[Unit]\nDescription=ck-sink-metric\nRequires=network-online.target\nAfter=network-online.target\n\n[Service]\nType=simple\nUser=eoi\nLimitCORE=infinity\nEnvironment="GOTRACEBACK=crash"\nExecStart=/data02/app/sinker/sinker/clickhouse_sinker --local-cfg-file=/data02/app/sinker/sinker/ck-sink-metric.json --log-paths=/data02/app/sinker/sinker/logs/sinker_metric.log\nRestart=on-failure\nRestartSec=3s\nStartLimitInterval=0\n\n[Install]\nWantedBy=multi-user.target\n')])])]),t("p",[s._v("Note:")]),s._v(" "),t("ul",[t("li",[s._v("Change pathes in "),t("code",[s._v("ExecStart")]),s._v(" as necessary.")]),s._v(" "),t("li",[t("code",[s._v("User=eoi")]),s._v(" means to run service as non-root for security reason.")]),s._v(" "),t("li",[t("code",[s._v("LimitCORE=infinity")]),s._v(" for service is equivalent to "),t("code",[s._v("ulimit -c unlimited")]),s._v(" for non-service.")]),s._v(" "),t("li",[s._v("env "),t("code",[s._v("GOTRACEBACK=crash")]),s._v(" is required for Go applications to dump core. Refers to "),t("code",[s._v("https://pkg.go.dev/runtime")]),s._v(".")])]),s._v(" "),t("h3",{attrs:{id:"modify-etc-sysctl-conf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#modify-etc-sysctl-conf"}},[s._v("#")]),s._v(" Modify "),t("code",[s._v("/etc/sysctl.conf")])]),s._v(" "),t("p",[t("code",[s._v("kernel.core_pattern = |/usr/lib/systemd/systemd-coredump %p %u %g %s %t")])]),s._v(" "),t("p",[s._v("Run "),t("code",[s._v("sysctl -p")]),s._v(".")]),s._v(" "),t("h3",{attrs:{id:"modify-etc-systemd-coredump-conf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#modify-etc-systemd-coredump-conf"}},[s._v("#")]),s._v(" Modify "),t("code",[s._v("etc/systemd/coredump.conf")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("[Coredump]\nProcessSizeMax=50G\nExternalSizeMax=50G\n")])])]),t("h3",{attrs:{id:"manage-clickhouse-sinker-service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#manage-clickhouse-sinker-service"}},[s._v("#")]),s._v(" Manage "),t("code",[s._v("clickhouse-sinker")]),s._v(" service")]),s._v(" "),t("ul",[t("li",[s._v("To start, "),t("code",[s._v("systemctl start sinker_metric")])]),s._v(" "),t("li",[s._v("To stop, "),t("code",[s._v("systemctl stop sinker_metric")])]),s._v(" "),t("li",[s._v("To view status, "),t("code",[s._v("systemctl status sinker_metric")])])]),s._v(" "),t("h3",{attrs:{id:"manage-coredumps-with-coredumpctl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#manage-coredumps-with-coredumpctl"}},[s._v("#")]),s._v(" Manage coredumps with "),t("code",[s._v("coredumpctl")])]),s._v(" "),t("p",[s._v("Coredumps are stored under "),t("code",[s._v("/var/lib/systemd/coredump")]),s._v(".\nRefers to core(5), systemd.exec(5), systemd-coredump(8), coredump.conf(5).")])])}),[],!1,null,null,null);e.default=n.exports}}]);